{"version":3,"sources":["components/Wrapper/Wrapper.js","components/Header/Header.js","components/PokemonCard/pokemonCard.js","components/Footer/footer.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Header","class","id","message","topScore","currentScore","PokemonCard","onClick","choosePokemon","pokemon","alt","src","image","Footer","App","state","Pokemon","notChosenPokemon","randomPokemonCard","random","i","length","j","Math","floor","_ref","undefined","_this","find","item","setState","pickNewPokemon","filter","_this2","this","Fragment","components_Header_Header","components_Wrapper_Wrapper","map","PokemonCard_pokemonCard","Footer_footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"0rCAKeA,SAFC,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMK,YCsB1CC,SAtBA,SAAAN,GAAK,OAClBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,MAAM,eACTN,EAAAC,EAAAC,cAAA,MAAIK,GAAG,aAAaD,MAAM,qBACxBN,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,MAAIC,WAAYJ,EAAMS,SAAmC,IAAnBT,EAAMS,WAF9C,oBAGsBT,EAAMU,YAKhCT,EAAAC,EAAAC,cAAA,OAAKI,MAAM,eACTN,EAAAC,EAAAC,cAAA,MAAIK,GAAG,aAAaD,MAAM,qBACxBN,EAAAC,EAAAC,cAAA,oBACUH,EAAMW,aADhB,MACiCX,EAAMS,cCEhCG,SAjBK,SAAAZ,GAAK,OACvBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,KACEU,QAAS,kBAAMb,EAAMc,cAAcd,EAAMe,UACzCX,WACEJ,EAAMW,aACF,cAINV,EAAAC,EAAAC,cAAA,OAAKa,IAAKhB,EAAMe,QAASE,IAAKjB,EAAMkB,aCL7BC,SANA,kBACblB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAlB,2BC8EagB,6MAzEbC,MAAQ,CACNX,SAAU,EACVC,aAAc,EACdW,QAASA,EACTC,iBAAkBD,KAIpBE,kBAAoB,SAAAC,GAClB,IAAK,IAAIC,EAAID,EAAOE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC1C,IAAIE,EAAIC,KAAKC,MAAMD,KAAKJ,UAAYC,EAAI,IADEK,EAEjB,CAACN,EAAOG,GAAIH,EAAOC,IAA3CD,EAAOC,GAFkCK,EAAA,GAE9BN,EAAOG,GAFuBG,EAAA,OAM9CjB,cAAgB,SAAAC,GAKd,QAAsBiB,IAJAC,EAAKZ,MAAME,iBAAiBW,KAChD,SAAAC,GAAI,OAAIA,EAAKpB,UAAYA,IAKzBkB,EAAKG,SAAS,CACZ3B,QAAS,YACTC,SACEuB,EAAKZ,MAAMV,aAAesB,EAAKZ,MAAMX,SACjCuB,EAAKZ,MAAMV,aACXsB,EAAKZ,MAAMX,SACjBC,aAAc,EACdW,QAASA,EACTC,iBAAkBD,QAEf,CAEL,IAAMe,EAAiBJ,EAAKZ,MAAME,iBAAiBe,OACjD,SAAAH,GAAI,OAAIA,EAAKpB,UAAYA,IAG3BkB,EAAKG,SAAS,CACZ3B,QAAS,cACTE,aAAcsB,EAAKZ,MAAMV,aAAe,EACxCW,QAASA,EACTC,iBAAkBc,IAItBJ,EAAKT,kBAAkBF,4EAGhB,IAAAiB,EAAAC,KACP,OACEvC,EAAAC,EAAAC,cAACF,EAAAC,EAAMuC,SAAP,KACExC,EAAAC,EAAAC,cAACuC,EAAD,CACEjC,QAAS+B,KAAKnB,MAAMZ,QACpBE,aAAc6B,KAAKnB,MAAMV,aACzBD,SAAU8B,KAAKnB,MAAMX,WAEvBT,EAAAC,EAAAC,cAACwC,EAAD,KACGH,KAAKnB,MAAMC,QAAQsB,IAAI,SAAAtB,GAAO,OAC7BrB,EAAAC,EAAAC,cAAC0C,EAAD,CACE9B,QAASO,EAAQP,QACjBG,MAAOI,EAAQJ,MACfJ,cAAeyB,EAAKzB,cACpBH,aAAc4B,EAAKlB,MAAMV,iBAG7BV,EAAAC,EAAAC,cAAC2C,EAAD,eApEQC,aCHlBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b154de78.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n  <div>\n    <nav>\n      <div class=\"nav-wrapper\">\n        <ul id=\"nav-mobile\" class=\"brand-logo center\">\n          <li>Clicky Game</li>\n          <li className={(props.message !== -1, props.message !== -1)} />\n          &nbsp;| Top Score: {props.topScore}\n        </ul>\n      </div>\n    </nav>\n\n    <nav class=\"nav-wrapper\">\n      <ul id=\"nav-mobile\" class=\"brand-logo center\">\n        <li>\n          Score: {props.currentScore} | {props.message}\n        </li>\n      </ul>\n    </nav>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./pokemonCard.css\";\n\nconst PokemonCard = props => (\n  <div className=\"card\">\n    <div className=\"img-container\">\n      <a\n        onClick={() => props.choosePokemon(props.pokemon)}\n        className={\n          props.currentScore === 0\n            ? \"cardImage\"\n            : \"cardImage\"\n        }\n      >\n        <img alt={props.pokemon} src={props.image} />\n      </a>\n    </div>\n  </div>\n);\n\nexport default PokemonCard;\n","import React from \"react\";\nimport \"./footer.css\";\n\nconst Footer = () => (\n  <footer className=\"page-footer\">\n    Â© 2018 Clicky Game\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Pokemon from \"./Pokemon.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport PokemonCard from \"./components/PokemonCard\";\nimport Footer from \"./components/Footer\";\n\nclass App extends Component {\n\t//sets the initial state\n  state = {\n    topScore: 0,\n    currentScore: 0,\n    Pokemon: Pokemon,\n    notChosenPokemon: Pokemon\n  };\n\n\t// randomizer\n  randomPokemonCard = random => {\n    for (var i = random.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      [random[i], random[j]] = [random[j], random[i]];\n    }\n  };\n\n  choosePokemon = pokemon => {\n    const locatePokemon = this.state.notChosenPokemon.find(\n      item => item.pokemon === pokemon\n    );\n\n    if (locatePokemon === undefined) {\n      // FAIL: if you chose the same Pokemon. Resets the state to initial state, but updates the topScore\n      this.setState({\n        message: \"You lose!\",\n        topScore:\n          this.state.currentScore > this.state.topScore\n            ? this.state.currentScore\n            : this.state.topScore,\n        currentScore: 0,\n        Pokemon: Pokemon,\n        notChosenPokemon: Pokemon\n      });\n    } else {\n      // SUCCESS: if you didn't pick the same Pokemon. Continues to add to currentScore\n      const pickNewPokemon = this.state.notChosenPokemon.filter(\n        item => item.pokemon !== pokemon\n      );\n\n      this.setState({\n        message: \"You got it!\",\n        currentScore: this.state.currentScore + 1,\n        Pokemon: Pokemon,\n        notChosenPokemon: pickNewPokemon\n      });\n    }\n\t\t// FAIL or SUCCESS, will randomize the cards\n    this.randomPokemonCard(Pokemon);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header\n          message={this.state.message} \n          currentScore={this.state.currentScore}\n          topScore={this.state.topScore}\n        />\n        <Wrapper>\n          {this.state.Pokemon.map(Pokemon => (\n            <PokemonCard\n              pokemon={Pokemon.pokemon}\n              image={Pokemon.image}\n              choosePokemon={this.choosePokemon}\n              currentScore={this.state.currentScore}\n            />\n          ))}\n          <Footer />\n        </Wrapper>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}